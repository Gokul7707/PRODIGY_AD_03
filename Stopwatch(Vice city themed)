<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vice City Stopwatch</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Creepster&family=Righteous&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Righteous', cursive;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
            background-image: url('https://img.freepik.com/free-vector/colorful-palm-silhouettes-style_23-2148545146.jpg');
            background-size: cover;
            background-position: center;
            color: white;
            overflow: hidden;
            position: relative;
        }
        #stopwatch {
            background-color: rgba(0, 255, 255, 0.7);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.5);
            width: 350px;
            position: relative;
            backdrop-filter: blur(10px);
            border: 4px solid black; /* Thicker border */
        }
        #time {
            font-size: 48px;
            margin-bottom: 20px;
            border: 4px solid #ff0099; /* Thicker border */
            padding: 10px;
            border-radius: 10px;
            background-color: rgba(255, 255, 255, 0.1);
            text-shadow: 0 0 5px #00ffcc, 0 0 10px #00ffcc;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            font-family: 'Righteous', cursive;
            border: 4px solid black; /* Thicker border */
        }
        #time:hover {
            transform: scale(1.05);
            box-shadow: 0 0 20px #00ffcc, 0 0 30px #ff0099;
        }
        button {
            background-color: #ff0099;
            border: 4px solid black; /* Thicker border */
            border-radius: 10px;
            color: white;
            padding: 12px 18px;
            font-size: 16px;
            margin: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        button:hover {
            background-color: #ff4da6;
            transform: translateY(-3px);
            box-shadow: 0 0 20px #ff4da6, 0 0 30px #ff0099;
        }
        button:active {
            transform: translateY(1px);
        }
        #laps {
            margin-top: 20px;
            max-height: 150px;
            overflow-y: auto;
            padding: 10px;
            border: 4px solid #00ffcc; /* Thicker border */
            border-radius: 10px;
            background-color: rgba(255, 255, 255, 0.1);
            border: 4px solid black; /* Thicker border */
        }
        .lap {
            padding: 8px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.3);
            transition: background-color 0.3s ease;
            font-family: 'Creepster', cursive;
        }
        .lap:last-child {
            border-bottom: none;
        }
        .lap:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }
        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }
        .fade-in {
            animation: fadeIn 0.5s ease-in;
        }
    </style>
</head>
<body>
    <div id="stopwatch" class="fade-in">
        <div id="time">00:00:00</div>
        <button id="startStop">Start</button>
        <button id="lap">Lap</button>
        <button id="reset">Reset</button>
        <div id="laps"></div>
    </div>
    <script>
        let timer;
        let isRunning = false;
        let startTime = 0;
        let elapsedTime = 0;
        const laps = [];

        function updateDisplay() {
            const totalMilliseconds = elapsedTime + (isRunning ? Date.now() - startTime : 0);
            const totalSeconds = Math.floor(totalMilliseconds / 1000);
            const minutes = String(Math.floor(totalSeconds / 60)).padStart(2, '0');
            const seconds = String(totalSeconds % 60).padStart(2, '0');
            const ms = String(Math.floor((totalMilliseconds % 1000) / 10)).padStart(2, '0');
            document.getElementById('time').textContent = `${minutes}:${seconds}:${ms}`;
        }

        function startTimer() {
            if (!isRunning) {
                isRunning = true;
                startTime = Date.now() - elapsedTime;
                document.getElementById('startStop').textContent = "Stop";
                timer = setInterval(updateDisplay, 10);
            } else {
                pauseTimer();
            }
        }

        function pauseTimer() {
            if (isRunning) {
                isRunning = false;
                clearInterval(timer);
                elapsedTime = Date.now() - startTime;
                document.getElementById('startStop').textContent = "Start";
            }
        }

        function resetTimer() {
            pauseTimer();
            elapsedTime = 0;
            updateDisplay();
            laps.length = 0;
            document.getElementById('laps').innerHTML = '';
        }

        function recordLap() {
            if (isRunning) {
                const totalMilliseconds = elapsedTime + (Date.now() - startTime);
                const totalSeconds = Math.floor(totalMilliseconds / 1000);
                const minutes = String(Math.floor(totalSeconds / 60)).padStart(2, '0');
                const seconds = String(totalSeconds % 60).padStart(2, '0');
                const ms = String(Math.floor((totalMilliseconds % 1000) / 10)).padStart(2, '0');
                laps.push(`${minutes}:${seconds}:${ms}`);
                displayLaps();
            }
        }

        function displayLaps() {
            const lapsContainer = document.getElementById('laps');
            lapsContainer.innerHTML = '';
            laps.forEach((lap, index) => {
                const lapElement = document.createElement('div');
                lapElement.classList.add('lap');
                lapElement.textContent = `Lap ${index + 1}: ${lap}`;
                lapsContainer.appendChild(lapElement);
            });
        }

        document.getElementById('startStop').onclick = startTimer;
        document.getElementById('lap').onclick = recordLap;
        document.getElementById('reset').onclick = resetTimer;
    </script>
</body>
</html>
